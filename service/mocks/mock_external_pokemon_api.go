// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/wizelineacademy/academy-go-q12021/service (interfaces: IExternalPokemonAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/wizelineacademy/academy-go-q12021/model"
)

// MockIExternalPokemonAPI is a mock of IExternalPokemonAPI interface.
type MockIExternalPokemonAPI struct {
	ctrl     *gomock.Controller
	recorder *MockIExternalPokemonAPIMockRecorder
}

// MockIExternalPokemonAPIMockRecorder is the mock recorder for MockIExternalPokemonAPI.
type MockIExternalPokemonAPIMockRecorder struct {
	mock *MockIExternalPokemonAPI
}

// NewMockIExternalPokemonAPI creates a new mock instance.
func NewMockIExternalPokemonAPI(ctrl *gomock.Controller) *MockIExternalPokemonAPI {
	mock := &MockIExternalPokemonAPI{ctrl: ctrl}
	mock.recorder = &MockIExternalPokemonAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIExternalPokemonAPI) EXPECT() *MockIExternalPokemonAPIMockRecorder {
	return m.recorder
}

// GetPokemonFromAPI mocks base method.
func (m *MockIExternalPokemonAPI) GetPokemonFromAPI(arg0 int) (*model.PokemonAPI, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPokemonFromAPI", arg0)
	ret0, _ := ret[0].(*model.PokemonAPI)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPokemonFromAPI indicates an expected call of GetPokemonFromAPI.
func (mr *MockIExternalPokemonAPIMockRecorder) GetPokemonFromAPI(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPokemonFromAPI", reflect.TypeOf((*MockIExternalPokemonAPI)(nil).GetPokemonFromAPI), arg0)
}
